# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Automated System Test

on:
  push:
    branches: [ test.yaml-rob ] 

jobs:
  start-gpu-runner:
    runs-on: [pelican]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: make slurm script
        run: |
          printf "#!/bin/bash
          #SBATCH -J mcs_ga_build  # name of job
          #SBATCH -A eecs          # sponsored account
          #SBATCH -p gpu           # partition or queue
          #SBATCH -o mcs.out       # output file
          #SBATCH -e mcs.err       # error file
          #SBATCH --nodelist=cn-gpu2
          srun -N1 -n1 sleep 840 &
          /scratch/MCS/actions-runner/run.sh" > /tmp/mcs.sh
      - name: launch gpu equipped runner
        run: |
          # give slurm script to the submit server
          scp /tmp/mcs.sh $USER@submit-b.hpc.engr.oregonstate.edu:/tmp/mcs.sh
          ssh -tt $USER@submit-b.hpc.engr.oregonstate.edu "source /etc/profile; module load slurm; sbatch /tmp/mcs.sh"
  gpu-runner-build:
    needs: start-gpu-runner
    runs-on: [cn-gpu2]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - name: load modules
        run: |
          module load gcc/6.5
          #module load python3/3.7
          #alias pip=pip3
          #alias python=python3
          #python -V
      - name: install dependencies
        run: |
          cd /scratch/MCS
          source src_miniconda
          conda activate mcs_opics
          python -V
          cd $GITHUB_WORKSPACE          
          # export DISPLAY=:0
          # need to get working to make more robust
          export test=`nvidia-smi | grep Xorg | awk '{print $5}'`
          export DISPLAY=`pgrep Xorg | xargs ps | grep $test | awk '{print $6}'`
          echo $DISPLAY
          pip install --upgrade pip
          pip install --upgrade setuptools
          pip install --upgrade wheel
          TMPDIR=/scratch/MCS/actions-runner python -m pip install --cache-dir /scratch/MCS/actions-runner --build /scratch/MCS/actions-runner git+https://github.com/NextCenturyCorporation/MCS@0.3.8
          pip install -r requirements.txt &> /dev/null
          pip show ai2thor
          pip show machine_common_sense
          bash setup_torch.sh &> /dev/null
          bash setup_unity.sh &> /dev/null
          bash setup_vision.sh &> /dev/null
          export PYTHONPATH=$PWD
          python get_gravity_scenes.py
          cp gravity_scenes/gravity_support_ex_01.json different_scenes
          # agent code in this branch explodes
          rm different_scenes/preference_0001_01.json
          # needs to be in this run context for unknown reason
          python eval.py
      - name: cleanup
        if: always()
        run: |
          pkill run.sh # need to make more specific!!
