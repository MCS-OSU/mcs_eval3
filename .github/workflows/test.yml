# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Automated System Test

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:

    runs-on: [self-hosted, linux, x64]

    steps:
    - uses: actions/checkout@v2
    - name: source or create miniconda python env
      run: |
        wget https://repo.anaconda.com/miniconda/Miniconda3-3.6.0-Linux-x86_64.sh -O ~/install_miniconda.sh
        bash ~/install_miniconda.sh -b -p ./miniconda
        eval "$(~/miniconda shell.bash hook)"
        conda init
        echo $PREFIX
        python -V
    - name: Install dependencies
      run: |
        pip install --upgrade pip setuptools wheel
        pip install --upgrade flake8 pytest
        python -m pip install git+https://github.com/NextCenturyCorporation/MCS@master#egg=machine_common_sense
        pip install -r requirements.txt
        bash setup_torch.sh
        bash setup_unity.sh
        bash setup_vision.sh
        export PYTHONPATH=$PWD
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run evaluation code on scenes
      run: |
        python eval.py --scenes test-scenes/
    - name: Test with pytest
      run: |
        pytest
